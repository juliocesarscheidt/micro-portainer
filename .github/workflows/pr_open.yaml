name: Pipeline CI - PR Open

on:
  # schedule:
  #   - cron: "0 0 * * *"

  # push:
  #   branches: [main, development]
  #   tags: ["v*.*.*"]

  pull_request:
    branches: [main, development]
    types: [opened, reopened, synchronize, edited]

env:
  REGISTRY: ghcr.io

jobs:
  build:
    name: Build anc Check Image
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    env:
      NODE_ENV: "production"
      V_DOCKER_API: "1.41"
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    - name: Build image
      run: |
        docker image build \
          --tag docker.io/juliocesarmidia/micro-portainer:${{ github.event.number }} ./micro-portainer
    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: 'docker.io/juliocesarmidia/micro-portainer:${{ github.event.number }}'
        scan-type: 'image'
        format: 'table'
        exit-code: '1'
        ignore-unfixed: true
        vuln-type: 'os,library'
        severity: 'CRITICAL'

  push:
    name: Push Image
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    defaults:
      run:
        shell: bash
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    - id: setShortSha
      name: Set short SHA
      run: echo "SHA_SHORT=$(git rev-parse --short=7 HEAD)" >> $GITHUB_OUTPUT
    - name: Login to Docker Registry
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Push image to Docker Registry
      uses: docker/build-push-action@v4
      with:
        push: true
        context: ./micro-portainer
        tags: |
          docker.io/juliocesarmidia/micro-portainer:${{ steps.setShortSha.outputs.SHA_SHORT }}
        labels: |
          maintainer="Julio Cesar <julio@blackdevs.com.br>"
          org.opencontainers.image.source="https://github.com/juliocesarscheidt/micro-portainer"
          org.opencontainers.image.description="Docker API being proxied by Nginx, exposing its information on some UI made with VueJS"
          org.opencontainers.image.licenses="MIT"
    - name: Login to Github Registry
      uses: docker/login-action@v2
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Push image to Github Registry
      uses: docker/build-push-action@v4
      with:
        push: true
        context: ./micro-portainer
        tags: |
          ${{ env.REGISTRY }}/juliocesarscheidt/micro-portainer:${{ steps.setShortSha.outputs.SHA_SHORT }}
        labels: |
          maintainer="Julio Cesar <julio@blackdevs.com.br>"
          org.opencontainers.image.source="https://github.com/juliocesarscheidt/micro-portainer"
          org.opencontainers.image.description="Docker API being proxied by Nginx, exposing its information on some UI made with VueJS"
          org.opencontainers.image.licenses="MIT"

  comment:
    name: Comment
    needs: push
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
    defaults:
      run:
        shell: bash
    steps:
    - name: Comment on PR
      uses: mshick/add-pr-comment@v1
      with:
        message: |
          :rocket: The build was successful, the docker image docker.io/juliocesarmidia/micro-portainer was pushed to the registries!
        repo-token: ${{ secrets.GITHUB_TOKEN }}
        repo-token-user-login: "github-actions[bot]"
        allow-repeats: false
